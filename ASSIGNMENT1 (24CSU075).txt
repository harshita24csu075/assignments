                                                                                                                    ASSIGNMENT 1   
Ques1


#include <stdio.h>
#include <math.h>

int armCheck(int num) {
int result=0;
int rem;
int og = num;
while (og != 0) {

rem = og % 10;

result += pow(rem,3);
og /= 10;

}
if (result == num){
return printf("%d is an Armstrong number.", num);
}
else{
return printf("%d is not an Armstrong number.", num);
}
}
int main() {
int num;
printf("Enter a Three Digit Integer --> ");
scanf("%d", &num);
armCheck(num);
return 0;
}


QUES2 


#include <stdio.h>

int HCF(int a, int b) {
int c;

if(a%b == 0){
return b;
}
else if(b%a == 0){
return a;
}
else{
return HCF(b,a%b);
}
}
int main() {
int num1, num2;
int hcf;
printf("Enter the First Integer --> ");
scanf("%d", &num1);
printf("Enter the Second Integer --> ");
scanf("%d", &num2);
hcf = HCF(num1,num2);

printf("Hcf of %d and %d is %d",num1,num2,hcf);
return 0;
}  


QUES3


#include <stdio.h>


int main() {
int num1, num2;
int sub;
printf("Enter the First Integer --> ");
scanf("%d", &num1);
printf("Enter the Second Integer --> ");
scanf("%d", &num2);

sub = num1 + ~num2 + 1;

//~ is a bitwise operator, it flips the bits and in normaa
// language it turns a number negative after adding 1 to it

//for example
//~2 = -3
printf("%d-%d = %d",num1,num2,sub);
return 0;
}


QUES4


#include <stdio.h>


int usingThird(int a,int b){
int c;
c=a;
a=b;
b=c;
return printf("New : a=%d, b=%d\n",a,b);
}

int addOrSub(int a,int b){
a=a+b;
b=a-b;
a=a-b;
return printf("New : a=%d, b=%d\n",a,b);

}

int mulOrDiv(int a,int b){


a=a*b;
b=a/b;
a=a/b;
return printf("New : a=%d, b=%d\n",a,b);

}

int bitwiseOp(int a,int b){
a=a^b;
b=a^b;
a=a^b;
return printf("New : a=%d, b=%d\n",a,b);
}



QUES5


#include <stdio.h>


int perfect(int num){
int result;
int count = 0;

for(int i=1;i<num;i++){
if(num%i == 0){
count += i;
}

}

if (count == num){
printf("%d is a perfect Number",num);
}
else{
printf("%d is not a perfect Number",num);
}
}

int main() {
int num;

printf("Enter the Integer--> ");
scanf("%d", &num);

perfect(num);


}


QUES6


#include <stdio.h>


int coords(int x,int y){
printf("(%d,%d) ",x,y);
if(x>0){
if(y>0){
return printf("Lies in First Quadrant");
}
else if(y<0){
return printf("Lies in Second Quadrant");
}
else{
return printf("Lies on the Positive X-axis");
}
}
else if(x<0){
if(y>0){
return printf("Lies in Fourth Quadrant");
}
else if(y<0){
return printf("Lies in Third Quadrant");
}
else{
return printf("Lies on the Negative X-axis");
}
}
else{
if(y>0){
return printf("Lies on the Positive Y-axis");
}
else if(y<0){
return printf("Lies on the Positive Y-axis");
}
else{
return printf("Lies on the Origin");
}

}


}

int main() {
int x,y;

printf("Enter the X-Coordinate = ");
scanf("%d", &x);

printf("Enter the Y-Coordinate = ");
scanf("%d", &y);

coords(x,y);


}


QUES7 


#include <stdio.h>
#include<math.h>
int decimalToBinary(int n)
{
int binaryNum[32];
int i = 0;
while (n > 0) {
binaryNum[i] = n % 2;
n = n / 2;
i++;
}
for (int j = i - 1; j >= 0; j--)
printf("%d", binaryNum[j]);
}

int binaryToDecimal(int n)
{
int num = n;
int dec = 0;
int power = 1;

int temp = num;
// Extracting the last digit of the binary number
while (temp>0) {
int last_digit = temp % 10;

temp = temp / 10;
dec += last_digit * power;
power = power * 2;
}

// Returning the decimal value
return printf("%d",dec);
}

// Driver program
int main()
{
int num;

printf("Enter Number to be converted = ");
scanf("%d",&num);
int choice;
printf("Enter 1 for Binary to Decimal\n");
printf("Enter 2 for Decimal to Binary\n");
scanf("%d",&choice);

switch(choice){

case 1:
binaryToDecimal(num);
break;
case 2:
decimalToBinary(num);
break;
default:
printf("Please Give a valid Input");
break;
}
}





QUES8


#include <stdio.h>

int main() {
int n = 5;

for (int row = 0; row < n; row++) {
for (int col = 0; col <= row; col++) {

if ((row + col) % 2 == 0) {
printf("1");
} else {
printf("0");
}
}
printf("\n");
}

return 0;
}



QUES9


#include<stdio.h>

int main() {
int n = 5;

for (int row = 0; row < n; row++) {

for (int col = 0; col <= row; col++) {
if (col % 2 == 0) {
printf("0");
} else {
printf("1");
}
}

for (int space = 0; space < 2 * (n - row - 1); space++) {
printf(" ");
}

for (int col = 0; col <= row; col++) {
if (col % 2 == 0) {
printf("0");
} else {
printf("1");
}
}

printf("\n");
}

return 0;
}



QUES10


#include <stdio.h>

int main() {
int n, i, j;
printf("Enter the number of rows for Pascal's Triangle: ");
scanf("%d", &n);
int triangle[n][n];

for (i = 0; i < n; i++) {
for (j = 0; j <= i; j++) {
if (j == 0 || j == i) {
triangle[i][j] = 1;
} else {
triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
}
}
}
for (i = 0; i < n; i++) {

for (j = 0; j < n - i - 1; j++) {
printf(" ");
}
for (j = 0; j <= i; j++) {
printf("%d ", triangle[i][j]);
}
printf("\n");
}

return 0;
}


